import { Heading, Container, Button, Stack, Select, Card, CardBody, CardHeader, Text, HStack, Center, VStack } from '@chakra-ui/react'
import Head from 'next/head'
import { useState } from 'react'
import { FaFootballBall, FaLeaf, FaMapSigns, FaPaintBrush } from 'react-icons/fa'
import { GiPopcorn, GiDinosaurBones } from 'react-icons/gi'

export default function Home() {

  const [difficulty, setDifficulty] = useState("easy")
  const handleDifficultyChange = (event) => setDifficulty(event.target.value)

  const [question, setQuestion] = useState(null)
  const [answers, setAnswers] = useState([])

  const [showAnswer, setShowAnswer] = useState(false)
  const handleReveal = () => setShowAnswer(true)

  async function getGeographyQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=geography&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  async function getEntertainmentQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=film_and_tv,society_and_culture&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  async function getHistoryQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=history,general_knowledge&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  async function getArtsQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=arts_and_literature,music&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  async function getScienceQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=science&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  async function getSportsQuestion() {
    setShowAnswer(false)
    let response = await fetch(`https://the-trivia-api.com/api/questions?categories=sport_and_leisure,food_and_drink&limit=1&difficulty=${difficulty}`)
    let json = await response.json()
    setQuestion(json[0])
    let rawA = json[0].incorrectAnswers
    rawA.push(json[0].correctAnswer)
    setAnswers(shuffle(rawA))
  }

  function shuffle(a) {
    for (let i = a.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
  }

  return (
    <>
      <Head>
        <title>Trivial Pursuit</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container mt={4}>
          <Stack spacing={4}>
            <Container>
              <Heading>Trivial Pursuit</Heading>
            </Container>
            <Container>
              <Select value={difficulty} onChange={handleDifficultyChange}>
                <option value='easy'>Easy</option>
                <option value='medium'>Medium</option>
                <option value='hard'>Hard</option>
              </Select>
            </Container>
            <Container>
              <Stack>
                <Button onClick={getGeographyQuestion} colorScheme='blue' leftIcon={<FaMapSigns />}>Geography</Button>
                <Button onClick={getEntertainmentQuestion} colorScheme='pink' leftIcon={<GiPopcorn />}>Entertainment</Button>
                <Button onClick={getHistoryQuestion} colorScheme='yellow' leftIcon={<GiDinosaurBones />}>History</Button>
                <Button onClick={getArtsQuestion} colorScheme='purple' leftIcon={<FaPaintBrush />}>Art & Literature</Button>
                <Button onClick={getScienceQuestion} colorScheme='green' leftIcon={<FaLeaf />}>Science & Nature</Button>
                <Button onClick={getSportsQuestion} colorScheme='orange' leftIcon={<FaFootballBall />}>Sport & Leisure</Button>
              </Stack>
            </Container>
            {question && (
              <Container>
                <Card>
                  <CardHeader>
                    <Heading size='md'>{question.question}</Heading>
                  </CardHeader>
                  <CardBody>
                    <Center>
                      <VStack>
                        <HStack>
                          {answers.map((answer, index) =>
                            <Text key={index}>{answer}</Text>
                          )}
                        </HStack>
                        <Button onClick={handleReveal} colorScheme='red'>Reveal</Button>
                        {showAnswer && (
                          <Text>{question.correctAnswer}</Text>
                        )}
                      </VStack>
                    </Center>
                  </CardBody>
                </Card>
              </Container>
            )}
          </Stack>
        </Container>
      </main>
    </>
  )
}
